{"ast":null,"code":"var _jsxFileName = \"/workspaces/codespaces-blank/jupyter_react/src/components/CodeCell.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport AceEditor from 'react-ace';\nimport { KernelContext } from './KernelProvide';\nimport CellOutput from './CellOutput';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/theme-monokai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CodeCell() {\n  _s();\n  const [code, setCode] = useState('');\n  const socket = useContext(KernelContext);\n  const handleExecute = () => {\n    if (socket && socket.readyState === 1) {\n      const executeMessage = {\n        header: {\n          msg_id: `execute_${Date.now()}`,\n          msg_type: 'execute_request',\n          username: '',\n          session: ''\n        },\n        parent_header: {},\n        metadata: {},\n        content: {\n          code,\n          silent: false,\n          store_history: true,\n          user_expressions: {},\n          allow_stdin: false\n        }\n      };\n      socket.send(JSON.stringify(executeMessage));\n    } else {\n      console.error('WebSocket is not open: readyState ', socket.readyState);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AceEditor, {\n        mode: \"python\",\n        theme: \"monokai\",\n        onChange: setCode,\n        name: \"UNIQUE_ID_OF_DIV\",\n        editorProps: {\n          $blockScrolling: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExecute,\n        disabled: !socket,\n        children: \"Run\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CellOutput, {\n      socket: socket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(CodeCell, \"iV2ZuFrFpFCOXbb4yXsiN2UhJAw=\");\n_c = CodeCell;\nexport default CodeCell;\nvar _c;\n$RefreshReg$(_c, \"CodeCell\");","map":{"version":3,"names":["React","useState","useContext","AceEditor","KernelContext","CellOutput","jsxDEV","_jsxDEV","CodeCell","_s","code","setCode","socket","handleExecute","readyState","executeMessage","header","msg_id","Date","now","msg_type","username","session","parent_header","metadata","content","silent","store_history","user_expressions","allow_stdin","send","JSON","stringify","console","error","children","mode","theme","onChange","name","editorProps","$blockScrolling","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/workspaces/codespaces-blank/jupyter_react/src/components/CodeCell.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport AceEditor from 'react-ace';\nimport { KernelContext } from './KernelProvide';\nimport CellOutput from './CellOutput';\n\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/theme-monokai';\n\nfunction CodeCell() {\n  const [code, setCode] = useState('');\n  const socket = useContext(KernelContext);\n\n  const handleExecute = () => {\n    if (socket && socket.readyState === 1) {\n      const executeMessage = {\n        header: {\n          msg_id: `execute_${Date.now()}`,\n          msg_type: 'execute_request',\n          username: '',\n          session: '',\n        },\n        parent_header: {},\n        metadata: {},  \n        content: {\n          code,\n          silent: false,\n          store_history: true,\n          user_expressions: {},\n          allow_stdin: false,\n        },\n      };\n      socket.send(JSON.stringify(executeMessage));\n    } else {\n      console.error('WebSocket is not open: readyState ', socket.readyState);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <AceEditor\n          mode=\"python\"\n          theme=\"monokai\"\n          onChange={setCode}\n          name=\"UNIQUE_ID_OF_DIV\"\n          editorProps={{ $blockScrolling: true }}\n        />\n        <button onClick={handleExecute} disabled={!socket}>\n          Run\n        </button>\n      </div>\n\n      <CellOutput socket={socket} />\n    </div>\n  );\n}\n\nexport default CodeCell;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,OAAOC,SAAS,MAAM,WAAW;AACjC,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAOC,UAAU,MAAM,cAAc;AAErC,OAAO,uCAAuC;AAC9C,OAAO,yCAAyC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMW,MAAM,GAAGV,UAAU,CAACE,aAAa,CAAC;EAExC,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAID,MAAM,IAAIA,MAAM,CAACE,UAAU,KAAK,CAAC,EAAE;MACrC,MAAMC,cAAc,GAAG;QACrBC,MAAM,EAAE;UACNC,MAAM,EAAG,WAAUC,IAAI,CAACC,GAAG,CAAC,CAAE,EAAC;UAC/BC,QAAQ,EAAE,iBAAiB;UAC3BC,QAAQ,EAAE,EAAE;UACZC,OAAO,EAAE;QACX,CAAC;QACDC,aAAa,EAAE,CAAC,CAAC;QACjBC,QAAQ,EAAE,CAAC,CAAC;QACZC,OAAO,EAAE;UACPf,IAAI;UACJgB,MAAM,EAAE,KAAK;UACbC,aAAa,EAAE,IAAI;UACnBC,gBAAgB,EAAE,CAAC,CAAC;UACpBC,WAAW,EAAE;QACf;MACF,CAAC;MACDjB,MAAM,CAACkB,IAAI,CAACC,IAAI,CAACC,SAAS,CAACjB,cAAc,CAAC,CAAC;IAC7C,CAAC,MAAM;MACLkB,OAAO,CAACC,KAAK,CAAC,oCAAoC,EAAEtB,MAAM,CAACE,UAAU,CAAC;IACxE;EACF,CAAC;EAED,oBACEP,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,gBACE5B,OAAA,CAACJ,SAAS;QACRiC,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAC,SAAS;QACfC,QAAQ,EAAE3B,OAAQ;QAClB4B,IAAI,EAAC,kBAAkB;QACvBC,WAAW,EAAE;UAAEC,eAAe,EAAE;QAAK;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eACFtC,OAAA;QAAQuC,OAAO,EAAEjC,aAAc;QAACkC,QAAQ,EAAE,CAACnC,MAAO;QAAAuB,QAAA,EAAC;MAEnD;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENtC,OAAA,CAACF,UAAU;MAACO,MAAM,EAAEA;IAAO;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV;AAACpC,EAAA,CA/CQD,QAAQ;AAAAwC,EAAA,GAARxC,QAAQ;AAiDjB,eAAeA,QAAQ;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}