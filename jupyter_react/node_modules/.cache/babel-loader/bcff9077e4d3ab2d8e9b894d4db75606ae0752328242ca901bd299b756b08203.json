{"ast":null,"code":"var _jsxFileName = \"/workspaces/codespaces-blank/jupyter_react/src/components/CopilotCell.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AceEditor from 'react-ace';\nimport axios from 'axios';\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/theme-monokai';\nimport MarkdownCell from './MarkdownCell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CopilotCell() {\n  _s();\n  const [code, setCode] = useState('');\n  const [output, setOutput] = useState('');\n  const [kernelId, setKernelId] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const handleMarkdownChange = newCode => {\n    setCode(newCode);\n  };\n  useEffect(() => {\n    const createKernel = async () => {\n      try {\n        const response = await axios.post('http://localhost:8888/api/kernels?token=123456');\n        setKernelId(response.data.id);\n      } catch (error) {\n        console.error('Failed to create kernel:', error);\n      }\n    };\n    createKernel();\n  }, []);\n  useEffect(() => {\n    if (kernelId) {\n      const socket = new W3CWebSocket(`ws://localhost:8888/api/kernels/${kernelId}/channels?token=123456`);\n      socket.onmessage = message => {\n        const data = JSON.parse(message.data);\n        if (data.header.msg_type === 'execute_result' || data.header.msg_type === 'stream') {\n          setOutput(data.content.text);\n        }\n      };\n      setSocket(socket);\n    }\n    return () => {\n      if (socket) {\n        socket.close();\n      }\n    };\n  }, [kernelId]);\n  const handleExecute = () => {\n    if (socket && socket.readyState === 1) {\n      const executeMessage = {\n        header: {\n          msg_id: `execute_${Date.now()}`,\n          msg_type: 'execute_request',\n          username: '',\n          session: ''\n        },\n        parent_header: {},\n        metadata: {},\n        content: {\n          code,\n          silent: false,\n          store_history: true,\n          user_expressions: {},\n          allow_stdin: false\n        }\n      };\n      socket.send(JSON.stringify(executeMessage));\n    } else {\n      console.error('WebSocket is not open: readyState ', socket.readyState);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AceEditor, {\n      mode: \"python\",\n      theme: \"monokai\",\n      onChange: setCode,\n      name: \"UNIQUE_ID_OF_DIV\",\n      editorProps: {\n        $blockScrolling: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleExecute,\n      disabled: !socket,\n      children: \"Run\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(CopilotCell, \"EyEwFN3qXZ7F3T6I40mgcLi76F0=\");\n_c = CopilotCell;\nexport default CopilotCell;\nvar _c;\n$RefreshReg$(_c, \"CopilotCell\");","map":{"version":3,"names":["React","useState","useEffect","AceEditor","axios","w3cwebsocket","W3CWebSocket","MarkdownCell","jsxDEV","_jsxDEV","CopilotCell","_s","code","setCode","output","setOutput","kernelId","setKernelId","socket","setSocket","handleMarkdownChange","newCode","createKernel","response","post","data","id","error","console","onmessage","message","JSON","parse","header","msg_type","content","text","close","handleExecute","readyState","executeMessage","msg_id","Date","now","username","session","parent_header","metadata","silent","store_history","user_expressions","allow_stdin","send","stringify","children","mode","theme","onChange","name","editorProps","$blockScrolling","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/workspaces/codespaces-blank/jupyter_react/src/components/CopilotCell.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AceEditor from 'react-ace';\nimport axios from 'axios';\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\n\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/theme-monokai';\n\nimport MarkdownCell from './MarkdownCell';\n\nfunction CopilotCell() {\n  const [code, setCode] = useState('');\n  const [output, setOutput] = useState('');\n  const [kernelId, setKernelId] = useState(null);\n  const [socket, setSocket] = useState(null);\n\n  const handleMarkdownChange = (newCode) => {\n    setCode(newCode);\n  }\n  useEffect(() => {\n    const createKernel = async () => {\n      try {\n        const response = await axios.post('http://localhost:8888/api/kernels?token=123456');\n        setKernelId(response.data.id);\n      } catch (error) {\n        console.error('Failed to create kernel:', error);\n      }\n    };\n\n    createKernel();\n  }, []);\n\n  useEffect(() => {\n    if (kernelId) {\n      const socket = new W3CWebSocket(`ws://localhost:8888/api/kernels/${kernelId}/channels?token=123456`);\n      socket.onmessage = (message) => {\n        const data = JSON.parse(message.data);\n        if (data.header.msg_type === 'execute_result' || data.header.msg_type === 'stream') {\n          setOutput(data.content.text);\n        }\n      };\n      setSocket(socket);\n    }\n\n    return () => {\n      if (socket) {\n        socket.close();\n      }\n    };\n  }, [kernelId]);\n\n  const handleExecute = () => {\n    if (socket && socket.readyState === 1) {\n        const executeMessage = {\n            header: {\n              msg_id: `execute_${Date.now()}`,\n              msg_type: 'execute_request',\n              username: '',\n              session: '',\n            },\n            parent_header: {},\n            metadata: {},  \n            content: {\n              code,\n              silent: false,\n              store_history: true,\n              user_expressions: {},\n              allow_stdin: false,\n            },\n          };\n      socket.send(JSON.stringify(executeMessage));\n    } else {\n      console.error('WebSocket is not open: readyState ', socket.readyState);\n    }\n  };\n\n  return (\n    <div>\n      <AceEditor\n        mode=\"python\"\n        theme=\"monokai\"\n        onChange={setCode}\n        name=\"UNIQUE_ID_OF_DIV\"\n        editorProps={{ $blockScrolling: true }}\n      />\n      <button onClick={handleExecute} disabled={!socket}>\n        Run\n      </button>\n      <pre>{output}</pre>\n    </div>\n  );\n}\n\nexport default CopilotCell;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}