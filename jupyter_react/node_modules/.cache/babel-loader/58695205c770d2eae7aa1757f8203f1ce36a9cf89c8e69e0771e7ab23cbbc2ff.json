{"ast":null,"code":"var _jsxFileName = \"/workspaces/codespaces-blank/jupyter_react/src/components/KernelProvide.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, createContext } from 'react';\nimport axios from 'axios';\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const KernelContext = /*#__PURE__*/createContext();\nexport function Kernel({\n  children\n}) {\n  _s();\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const createKernel = async () => {\n      try {\n        const response = await axios.post('http://localhost:8888/api/kernels?token=123456');\n        const kernelId = response.data.id;\n        const socket = new W3CWebSocket(`ws://localhost:8888/api/kernels/${kernelId}/channels?token=123456`);\n        setSocket(socket);\n      } catch (error) {\n        console.error('Failed to create kernel:', error);\n      }\n    };\n    createKernel();\n    return () => {\n      if (socket) {\n        socket.close();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(KernelContext.Provider, {\n    value: socket,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Kernel, \"NvwYO9vJOwIMt5STdlMKfWhuxZw=\");\n_c = Kernel;\nvar _c;\n$RefreshReg$(_c, \"Kernel\");","map":{"version":3,"names":["React","useState","useEffect","createContext","axios","w3cwebsocket","W3CWebSocket","jsxDEV","_jsxDEV","KernelContext","Kernel","children","_s","socket","setSocket","createKernel","response","post","kernelId","data","id","error","console","close","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/codespaces-blank/jupyter_react/src/components/KernelProvide.js"],"sourcesContent":["import React, { useState, useEffect, createContext } from 'react';\nimport axios from 'axios';\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\n\nexport const KernelContext = createContext();\n\nexport function Kernel({ children }) {\n  const [socket, setSocket] = useState(null);\n\n  useEffect(() => {\n    const createKernel = async () => {\n      try {\n        const response = await axios.post('http://localhost:8888/api/kernels?token=123456');\n        const kernelId = response.data.id;\n        const socket = new W3CWebSocket(`ws://localhost:8888/api/kernels/${kernelId}/channels?token=123456`);\n        setSocket(socket);\n      } catch (error) {\n        console.error('Failed to create kernel:', error);\n      }\n    };\n\n    createKernel();\n\n    return () => {\n      if (socket) {\n        socket.close();\n      }\n    };\n  }, []);\n\n  return (\n    <KernelContext.Provider value={socket}>\n      {children}\n    </KernelContext.Provider>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,aAAa,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,IAAIC,YAAY,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,OAAO,MAAMC,aAAa,gBAAGN,aAAa,CAAC,CAAC;AAE5C,OAAO,SAASO,MAAMA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,gDAAgD,CAAC;QACnF,MAAMC,QAAQ,GAAGF,QAAQ,CAACG,IAAI,CAACC,EAAE;QACjC,MAAMP,MAAM,GAAG,IAAIP,YAAY,CAAE,mCAAkCY,QAAS,wBAAuB,CAAC;QACpGJ,SAAS,CAACD,MAAM,CAAC;MACnB,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDN,YAAY,CAAC,CAAC;IAEd,OAAO,MAAM;MACX,IAAIF,MAAM,EAAE;QACVA,MAAM,CAACU,KAAK,CAAC,CAAC;MAChB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA,CAACC,aAAa,CAACe,QAAQ;IAACC,KAAK,EAAEZ,MAAO;IAAAF,QAAA,EACnCA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B;AAACjB,EAAA,CA7BeF,MAAM;AAAAoB,EAAA,GAANpB,MAAM;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}