{"ast":null,"code":"var _jsxFileName = \"/workspaces/codespaces-blank/jupyter_react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CodeCell from '../src/components/CodeCell';\nimport MarkdownCell from '../src/components/MarkdownCell';\nimport CopilotCell from './components/CopilotCell';\nimport FileUpload from './components/FileUpLoad';\nimport { KernelManager } from './components/KernelManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cells, setCells] = useState([]);\n  const addCell = type => {\n    setCells([...cells, {\n      type,\n      id: Math.random()\n    }]);\n  };\n  const deleteCell = id => {\n    setCells(cells.filter(cell => cell.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FileUpload, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addCell('code'),\n      children: \"Add Code Cell\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addCell('markdown'),\n      children: \"Add Markdown Cell\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addCell('ner'),\n      children: \"Add NER Cell\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KernelManager, {\n      children: cells.map(cell => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"cell.type === 'code' ? (\", /*#__PURE__*/_jsxDEV(CodeCell, {}, cell.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), \") : cell.type === 'markdown' ? (\", /*#__PURE__*/_jsxDEV(MarkdownCell, {}, cell.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), \") : (\", /*#__PURE__*/_jsxDEV(CopilotCell, {}, cell.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), \")\"]\n      }, cell.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9zjnsC1kUd6PYoVE5KeGE6GzgRE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CodeCell","MarkdownCell","CopilotCell","FileUpload","KernelManager","jsxDEV","_jsxDEV","App","_s","cells","setCells","addCell","type","id","Math","random","deleteCell","filter","cell","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_c","$RefreshReg$"],"sources":["/workspaces/codespaces-blank/jupyter_react/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport CodeCell from '../src/components/CodeCell';\nimport MarkdownCell from '../src/components/MarkdownCell';\nimport CopilotCell from './components/CopilotCell';\nimport FileUpload from './components/FileUpLoad';\nimport { KernelManager } from './components/KernelManager';\n\nfunction App() {\n  const [cells, setCells] = useState([]);\n\n  const addCell = (type) => {\n    setCells([...cells, { type, id: Math.random() }]);\n  };\n\n  const deleteCell = (id) => {\n    setCells(cells.filter(cell => cell.id !== id));\n  };\n\n  return (\n    <div>\n      <FileUpload />\n      <button onClick={() => addCell('code')}>Add Code Cell</button>\n      <button onClick={() => addCell('markdown')}>Add Markdown Cell</button>\n      <button onClick={() => addCell('ner')}>Add NER Cell</button>\n      <KernelManager>\n        {cells.map((cell) =>\n          <div key={cell.id}>\n        \n            cell.type === 'code' ? (\n              <CodeCell key={cell.id} />\n            ) : cell.type === 'markdown' ? (\n              <MarkdownCell key={cell.id} />\n            ) : (\n              <CopilotCell key={cell.id} />\n            )\n          </div>\n        )}\n      </KernelManager>\n      \n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,SAASC,aAAa,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,OAAO,GAAIC,IAAI,IAAK;IACxBF,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAAEG,IAAI;MAAEC,EAAE,EAAEC,IAAI,CAACC,MAAM,CAAC;IAAE,CAAC,CAAC,CAAC;EACnD,CAAC;EAED,MAAMC,UAAU,GAAIH,EAAE,IAAK;IACzBH,QAAQ,CAACD,KAAK,CAACQ,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACL,EAAE,KAAKA,EAAE,CAAC,CAAC;EAChD,CAAC;EAED,oBACEP,OAAA;IAAAa,QAAA,gBACEb,OAAA,CAACH,UAAU;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACdjB,OAAA;MAAQkB,OAAO,EAAEA,CAAA,KAAMb,OAAO,CAAC,MAAM,CAAE;MAAAQ,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9DjB,OAAA;MAAQkB,OAAO,EAAEA,CAAA,KAAMb,OAAO,CAAC,UAAU,CAAE;MAAAQ,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtEjB,OAAA;MAAQkB,OAAO,EAAEA,CAAA,KAAMb,OAAO,CAAC,KAAK,CAAE;MAAAQ,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5DjB,OAAA,CAACF,aAAa;MAAAe,QAAA,EACXV,KAAK,CAACgB,GAAG,CAAEP,IAAI,iBACdZ,OAAA;QAAAa,QAAA,GAAmB,0BAGf,eAAAb,OAAA,CAACN,QAAQ,MAAMkB,IAAI,CAACL,EAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,oCAE1B,eAAAjB,OAAA,CAACL,YAAY,MAAMiB,IAAI,CAACL,EAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,SAE9B,eAAAjB,OAAA,CAACJ,WAAW,MAAMgB,IAAI,CAACL,EAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,KAEjC;MAAA,GATUL,IAAI,CAACL,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEb,CAAC;AAEV;AAACf,EAAA,CAlCQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}