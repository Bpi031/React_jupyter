{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { __asyncGenerator, __await } from \"tslib\";\n/**\n * THIS IS AN AUTO-GENERATED FILE - DO NOT EDIT!\n *\n * Any changes you make here may be lost.\n *\n * If you need to make changes, please do so in the original source file, \\{project-root\\}/sources/custom\n */\nexport function polyfillStream(stream) {\n  makeAsyncIterable(stream);\n  return stream;\n}\nfunction makeAsyncIterable(webStream) {\n  if (!webStream[Symbol.asyncIterator]) {\n    webStream[Symbol.asyncIterator] = () => toAsyncIterable(webStream);\n  }\n  if (!webStream.values) {\n    webStream.values = () => toAsyncIterable(webStream);\n  }\n}\nfunction toAsyncIterable(stream) {\n  return __asyncGenerator(this, arguments, function* toAsyncIterable_1() {\n    const reader = stream.getReader();\n    try {\n      while (true) {\n        const {\n          value,\n          done\n        } = yield __await(reader.read());\n        if (done) {\n          return yield __await(void 0);\n        }\n        yield yield __await(value);\n      }\n    } finally {\n      const cancelPromise = reader.cancel();\n      reader.releaseLock();\n      yield __await(cancelPromise);\n    }\n  });\n}\nexport async function streamToText(stream) {\n  const reader = stream.getReader();\n  const buffers = [];\n  let length = 0;\n  try {\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      const {\n        value,\n        done\n      } = await reader.read();\n      if (done) {\n        return new TextDecoder().decode(concatBuffers(buffers, length));\n      }\n      length += value.length;\n      buffers.push(value);\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\nfunction getBuffersLength(buffers) {\n  return buffers.reduce((acc, curr) => acc + curr.length, 0);\n}\nfunction concatBuffers(buffers, len) {\n  const length = len !== null && len !== void 0 ? len : getBuffersLength(buffers);\n  const res = new Uint8Array(length);\n  for (let i = 0, pos = 0; i < buffers.length; i++) {\n    const buffer = buffers[i];\n    res.set(buffer, pos);\n    pos += buffer.length;\n  }\n  return res;\n}","map":{"version":3,"names":["polyfillStream","stream","makeAsyncIterable","webStream","Symbol","asyncIterator","toAsyncIterable","values","reader","getReader","value","done","__await","read","cancelPromise","cancel","releaseLock","streamToText","buffers","length","TextDecoder","decode","concatBuffers","push","getBuffersLength","reduce","acc","curr","len","res","Uint8Array","i","pos","buffer","set"],"sources":["/workspaces/codespaces-blank/jupyter_react/node_modules/@azure/openai/src/api/readableStreamUtils.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * THIS IS AN AUTO-GENERATED FILE - DO NOT EDIT!\n *\n * Any changes you make here may be lost.\n *\n * If you need to make changes, please do so in the original source file, \\{project-root\\}/sources/custom\n */\n\nexport function polyfillStream<T>(stream: ReadableStream<T>): ReadableStream<T> & AsyncIterable<T> {\n  makeAsyncIterable<T>(stream);\n  return stream;\n}\n\nfunction makeAsyncIterable<T>(\n  webStream: any,\n): asserts webStream is ReadableStream<T> & AsyncIterable<T> {\n  if (!webStream[Symbol.asyncIterator]) {\n    webStream[Symbol.asyncIterator] = () => toAsyncIterable(webStream);\n  }\n\n  if (!webStream.values) {\n    webStream.values = () => toAsyncIterable(webStream);\n  }\n}\n\nasync function* toAsyncIterable<T>(stream: ReadableStream<T>): AsyncIterableIterator<T> {\n  const reader = stream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value;\n    }\n  } finally {\n    const cancelPromise = reader.cancel();\n    reader.releaseLock();\n    await cancelPromise;\n  }\n}\n\nexport async function streamToText(stream: ReadableStream<Uint8Array>): Promise<string> {\n  const reader = stream.getReader();\n  const buffers: Uint8Array[] = [];\n  let length = 0;\n  try {\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return new TextDecoder().decode(concatBuffers(buffers, length));\n      }\n      length += value.length;\n      buffers.push(value);\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nfunction getBuffersLength(buffers: Uint8Array[]): number {\n  return buffers.reduce((acc, curr) => acc + curr.length, 0);\n}\n\nfunction concatBuffers(buffers: Uint8Array[], len?: number): Uint8Array {\n  const length = len ?? getBuffersLength(buffers);\n  const res = new Uint8Array(length);\n  for (let i = 0, pos = 0; i < buffers.length; i++) {\n    const buffer = buffers[i];\n    res.set(buffer, pos);\n    pos += buffer.length;\n  }\n\n  return res;\n}\n"],"mappings":"AAAA;AACA;;AAEA;;;;;;;AAQA,OAAM,SAAUA,cAAcA,CAAIC,MAAyB;EACzDC,iBAAiB,CAAID,MAAM,CAAC;EAC5B,OAAOA,MAAM;AACf;AAEA,SAASC,iBAAiBA,CACxBC,SAAc;EAEd,IAAI,CAACA,SAAS,CAACC,MAAM,CAACC,aAAa,CAAC,EAAE;IACpCF,SAAS,CAACC,MAAM,CAACC,aAAa,CAAC,GAAG,MAAMC,eAAe,CAACH,SAAS,CAAC;EACpE;EAEA,IAAI,CAACA,SAAS,CAACI,MAAM,EAAE;IACrBJ,SAAS,CAACI,MAAM,GAAG,MAAMD,eAAe,CAACH,SAAS,CAAC;EACrD;AACF;AAEA,SAAgBG,eAAeA,CAAIL,MAAyB;;IAC1D,MAAMO,MAAM,GAAGP,MAAM,CAACQ,SAAS,EAAE;IACjC,IAAI;MACF,OAAO,IAAI,EAAE;QACX,MAAM;UAAEC,KAAK;UAAEC;QAAI,CAAE,GAAG,MAAAC,OAAA,CAAMJ,MAAM,CAACK,IAAI,EAAE;QAC3C,IAAIF,IAAI,EAAE;UACR,aAAAC,OAAA;QACF;QACA,YAAAA,OAAA,CAAMF,KAAK;MACb;IACF,CAAC,SAAS;MACR,MAAMI,aAAa,GAAGN,MAAM,CAACO,MAAM,EAAE;MACrCP,MAAM,CAACQ,WAAW,EAAE;MACpB,MAAAJ,OAAA,CAAME,aAAa;IACrB;EACF,CAAC;;AAED,OAAO,eAAeG,YAAYA,CAAChB,MAAkC;EACnE,MAAMO,MAAM,GAAGP,MAAM,CAACQ,SAAS,EAAE;EACjC,MAAMS,OAAO,GAAiB,EAAE;EAChC,IAAIC,MAAM,GAAG,CAAC;EACd,IAAI;IACF;IACA,OAAO,IAAI,EAAE;MACX,MAAM;QAAET,KAAK;QAAEC;MAAI,CAAE,GAAG,MAAMH,MAAM,CAACK,IAAI,EAAE;MAC3C,IAAIF,IAAI,EAAE;QACR,OAAO,IAAIS,WAAW,EAAE,CAACC,MAAM,CAACC,aAAa,CAACJ,OAAO,EAAEC,MAAM,CAAC,CAAC;MACjE;MACAA,MAAM,IAAIT,KAAK,CAACS,MAAM;MACtBD,OAAO,CAACK,IAAI,CAACb,KAAK,CAAC;IACrB;EACF,CAAC,SAAS;IACRF,MAAM,CAACQ,WAAW,EAAE;EACtB;AACF;AAEA,SAASQ,gBAAgBA,CAACN,OAAqB;EAC7C,OAAOA,OAAO,CAACO,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACR,MAAM,EAAE,CAAC,CAAC;AAC5D;AAEA,SAASG,aAAaA,CAACJ,OAAqB,EAAEU,GAAY;EACxD,MAAMT,MAAM,GAAGS,GAAG,aAAHA,GAAG,cAAHA,GAAG,GAAIJ,gBAAgB,CAACN,OAAO,CAAC;EAC/C,MAAMW,GAAG,GAAG,IAAIC,UAAU,CAACX,MAAM,CAAC;EAClC,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAG,CAAC,EAAED,CAAC,GAAGb,OAAO,CAACC,MAAM,EAAEY,CAAC,EAAE,EAAE;IAChD,MAAME,MAAM,GAAGf,OAAO,CAACa,CAAC,CAAC;IACzBF,GAAG,CAACK,GAAG,CAACD,MAAM,EAAED,GAAG,CAAC;IACpBA,GAAG,IAAIC,MAAM,CAACd,MAAM;EACtB;EAEA,OAAOU,GAAG;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}