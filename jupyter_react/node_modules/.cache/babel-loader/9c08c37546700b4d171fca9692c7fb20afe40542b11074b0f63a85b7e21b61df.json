{"ast":null,"code":"var _jsxFileName = \"/workspaces/codespaces-blank/jupyter_react/src/components/CodeCell.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { usePyodide } from '@pyodide/react';\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/theme-monokai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CodeCell() {\n  _s();\n  const {\n    pyodide,\n    isPyodideLoading\n  } = usePyodide();\n  const [code, setCode] = useState('');\n  const [output, setOutput] = useState('');\n  const handleExecute = async () => {\n    if (pyodide) {\n      try {\n        const result = await pyodide.runPythonAsync(code);\n        setOutput(result.toString());\n      } catch (error) {\n        setOutput(error.toString());\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AceEditor, {\n      mode: \"python\",\n      theme: \"monokai\",\n      onChange: setCode,\n      name: \"UNIQUE_ID_OF_DIV\",\n      editorProps: {\n        $blockScrolling: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleExecute,\n      disabled: isPyodideLoading,\n      children: \"Run\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(CodeCell, \"gBxwPTMKDTgOI8vfcQuRaoKrMVk=\", false, function () {\n  return [usePyodide];\n});\n_c = CodeCell;\nexport default CodeCell;\nvar _c;\n$RefreshReg$(_c, \"CodeCell\");","map":{"version":3,"names":["React","useState","usePyodide","AceEditor","jsxDEV","_jsxDEV","CodeCell","_s","pyodide","isPyodideLoading","code","setCode","output","setOutput","handleExecute","result","runPythonAsync","toString","error","children","mode","theme","onChange","name","editorProps","$blockScrolling","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/workspaces/codespaces-blank/jupyter_react/src/components/CodeCell.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { usePyodide } from '@pyodide/react';\nimport AceEditor from 'react-ace';\n\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/theme-monokai';\n\nfunction CodeCell() {\n  const { pyodide, isPyodideLoading } = usePyodide();\n  const [code, setCode] = useState('');\n  const [output, setOutput] = useState('');\n\n  const handleExecute = async () => {\n    if (pyodide) {\n      try {\n        const result = await pyodide.runPythonAsync(code);\n        setOutput(result.toString());\n      } catch (error) {\n        setOutput(error.toString());\n      }\n    }\n  };\n\n  return (\n    <div>\n      <AceEditor\n        mode=\"python\"\n        theme=\"monokai\"\n        onChange={setCode}\n        name=\"UNIQUE_ID_OF_DIV\"\n        editorProps={{ $blockScrolling: true }}\n      />\n      <button onClick={handleExecute} disabled={isPyodideLoading}>\n        Run\n      </button>\n      <pre>{output}</pre>\n    </div>\n  );\n}\n\nexport default CodeCell;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,OAAOC,SAAS,MAAM,WAAW;AAEjC,OAAO,uCAAuC;AAC9C,OAAO,yCAAyC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC,OAAO;IAAEC;EAAiB,CAAC,GAAGP,UAAU,CAAC,CAAC;EAClD,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAIN,OAAO,EAAE;MACX,IAAI;QACF,MAAMO,MAAM,GAAG,MAAMP,OAAO,CAACQ,cAAc,CAACN,IAAI,CAAC;QACjDG,SAAS,CAACE,MAAM,CAACE,QAAQ,CAAC,CAAC,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdL,SAAS,CAACK,KAAK,CAACD,QAAQ,CAAC,CAAC,CAAC;MAC7B;IACF;EACF,CAAC;EAED,oBACEZ,OAAA;IAAAc,QAAA,gBACEd,OAAA,CAACF,SAAS;MACRiB,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAC,SAAS;MACfC,QAAQ,EAAEX,OAAQ;MAClBY,IAAI,EAAC,kBAAkB;MACvBC,WAAW,EAAE;QAAEC,eAAe,EAAE;MAAK;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACFxB,OAAA;MAAQyB,OAAO,EAAEhB,aAAc;MAACiB,QAAQ,EAAEtB,gBAAiB;MAAAU,QAAA,EAAC;IAE5D;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTxB,OAAA;MAAAc,QAAA,EAAMP;IAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV;AAACtB,EAAA,CA/BQD,QAAQ;EAAA,QACuBJ,UAAU;AAAA;AAAA8B,EAAA,GADzC1B,QAAQ;AAiCjB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}