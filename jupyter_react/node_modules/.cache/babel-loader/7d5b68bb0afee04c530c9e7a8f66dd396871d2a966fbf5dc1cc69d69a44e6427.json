{"ast":null,"code":"var _jsxFileName = \"/workspaces/codespaces-blank/jupyter_react/src/components/CopilotCell.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AceEditor from 'react-ace';\nimport axios from 'axios';\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/theme-monokai';\nimport MarkdownCell from './MarkdownCell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CopilotCell() {\n  _s();\n  const [code, setCode] = useState('');\n  const [output, setOutput] = useState('');\n  const [kernelId, setKernelId] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [content, setContent] = useState('');\n  const [file, setFile] = useState('');\n  const handleMarkdownChange = newContnet => {\n    setContent(newContnet);\n  };\n  useEffect(() => {\n    const createKernel = async () => {\n      try {\n        const response = await axios.post('http://localhost:8888/api/kernels?token=123456');\n        setKernelId(response.data.id);\n      } catch (error) {\n        console.error('Failed to create kernel:', error);\n      }\n    };\n    createKernel();\n  }, []);\n  useEffect(() => {\n    if (kernelId) {\n      const socket = new W3CWebSocket(`ws://localhost:8888/api/kernels/${kernelId}/channels?token=123456`);\n      socket.onmessage = message => {\n        const data = JSON.parse(message.data);\n        if (data.header.msg_type === 'execute_result' || data.header.msg_type === 'stream') {\n          setOutput(data.content.text);\n        }\n      };\n      setSocket(socket);\n    }\n    return () => {\n      if (socket) {\n        socket.close();\n      }\n    };\n  }, [kernelId]);\n  const handleExecute = () => {\n    if (socket && socket.readyState === 1) {\n      const executeMessage = {\n        header: {\n          msg_id: `execute_${Date.now()}`,\n          msg_type: 'execute_request',\n          username: '',\n          session: ''\n        },\n        parent_header: {},\n        metadata: {},\n        content: {\n          code,\n          silent: false,\n          store_history: true,\n          user_expressions: {},\n          allow_stdin: false\n        }\n      };\n      socket.send(JSON.stringify(executeMessage));\n    } else {\n      console.error('WebSocket is not open: readyState ', socket.readyState);\n    }\n  };\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleGenerateCode = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('sentence', content);\n      formData.append('file', file);\n      const response = await axios.post('http://localhost:8000/request', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      const generatedCode = response.data.content;\n      setContent(generatedCode);\n    } catch (error) {\n      console.error('Failed to generate code:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MarkdownCell, {\n      onChange: handleMarkdownChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleGenerateCode,\n      accept: \".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateCode,\n      children: \"Generate Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AceEditor, {\n      mode: \"python\",\n      theme: \"monokai\",\n      value: content,\n      onChange: setCode,\n      name: \"UNIQUE_ID_OF_DIV\",\n      editorProps: {\n        $blockScrolling: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleExecute,\n      disabled: !socket,\n      children: \"Run\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(CopilotCell, \"d0YGGJI1eSd7em7xV5UsLoDDeBo=\");\n_c = CopilotCell;\nexport default CopilotCell;\nvar _c;\n$RefreshReg$(_c, \"CopilotCell\");","map":{"version":3,"names":["React","useState","useEffect","AceEditor","axios","w3cwebsocket","W3CWebSocket","MarkdownCell","jsxDEV","_jsxDEV","CopilotCell","_s","code","setCode","output","setOutput","kernelId","setKernelId","socket","setSocket","content","setContent","file","setFile","handleMarkdownChange","newContnet","createKernel","response","post","data","id","error","console","onmessage","message","JSON","parse","header","msg_type","text","close","handleExecute","readyState","executeMessage","msg_id","Date","now","username","session","parent_header","metadata","silent","store_history","user_expressions","allow_stdin","send","stringify","handleFileChange","event","target","files","handleGenerateCode","formData","FormData","append","headers","generatedCode","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onClick","mode","theme","value","name","editorProps","$blockScrolling","disabled","_c","$RefreshReg$"],"sources":["/workspaces/codespaces-blank/jupyter_react/src/components/CopilotCell.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AceEditor from 'react-ace';\nimport axios from 'axios';\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\n\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/theme-monokai';\n\nimport MarkdownCell from './MarkdownCell';\n\nfunction CopilotCell() {\n  const [code, setCode] = useState('');\n  const [output, setOutput] = useState('');\n  const [kernelId, setKernelId] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [content, setContent] = useState('');\n  const [file, setFile] = useState('')\n  const handleMarkdownChange = (newContnet) => {\n    setContent(newContnet);\n  }\n\n  useEffect(() => {\n    const createKernel = async () => {\n      try {\n        const response = await axios.post('http://localhost:8888/api/kernels?token=123456');\n        setKernelId(response.data.id);\n      } catch (error) {\n        console.error('Failed to create kernel:', error);\n      }\n    };\n\n    createKernel();\n  }, []);\n\n  useEffect(() => {\n    if (kernelId) {\n      const socket = new W3CWebSocket(`ws://localhost:8888/api/kernels/${kernelId}/channels?token=123456`);\n      socket.onmessage = (message) => {\n        const data = JSON.parse(message.data);\n        if (data.header.msg_type === 'execute_result' || data.header.msg_type === 'stream') {\n          setOutput(data.content.text);\n        }\n      };\n      setSocket(socket);\n    }\n\n    return () => {\n      if (socket) {\n        socket.close();\n      }\n    };\n  }, [kernelId]);\n\n  const handleExecute = () => {\n    if (socket && socket.readyState === 1) {\n        const executeMessage = {\n            header: {\n              msg_id: `execute_${Date.now()}`,\n              msg_type: 'execute_request',\n              username: '',\n              session: '',\n            },\n            parent_header: {},\n            metadata: {},  \n            content: {\n              code,\n              silent: false,\n              store_history: true,\n              user_expressions: {},\n              allow_stdin: false,\n            },\n          };\n      socket.send(JSON.stringify(executeMessage));\n    } else {\n      console.error('WebSocket is not open: readyState ', socket.readyState);\n    }\n  };\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleGenerateCode = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('sentence', content);\n      formData.append('file', file);\n\n      const response = await axios.post('http://localhost:8000/request', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      const generatedCode = response.data.content;\n      setContent(generatedCode);\n    } catch (error) {\n      console.error('Failed to generate code:', error);\n    }\n  };\n\n  return (\n    <div>\n      <MarkdownCell onChange={handleMarkdownChange} />\n      <input type='file' onChange={handleGenerateCode} accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"/>\n      <button onClick={handleGenerateCode}>Generate Code</button>\n      <pre>{content}</pre>\n      <AceEditor\n        mode=\"python\"\n        theme=\"monokai\"\n        value={content}\n        onChange={setCode}\n        name=\"UNIQUE_ID_OF_DIV\"\n        editorProps={{ $blockScrolling: true }}\n      />\n      <button onClick={handleExecute} disabled={!socket}>\n        Run\n      </button>\n      <pre>{output}</pre>\n    </div>\n  );\n}\n\nexport default CopilotCell;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}