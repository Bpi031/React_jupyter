{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { isTokenCredential } from \"@azure/core-auth\";\nimport { createDefaultPipeline } from \"./clientHelpers\";\nimport { sendRequest } from \"./sendRequest\";\nimport { buildRequestUrl } from \"./urlHelpers\";\nexport function getClient(endpoint, credentialsOrPipelineOptions, clientOptions = {}) {\n  var _a, _b;\n  let credentials;\n  if (credentialsOrPipelineOptions) {\n    if (isCredential(credentialsOrPipelineOptions)) {\n      credentials = credentialsOrPipelineOptions;\n    } else {\n      clientOptions = credentialsOrPipelineOptions !== null && credentialsOrPipelineOptions !== void 0 ? credentialsOrPipelineOptions : {};\n    }\n  }\n  const pipeline = createDefaultPipeline(endpoint, credentials, clientOptions);\n  if ((_a = clientOptions.additionalPolicies) === null || _a === void 0 ? void 0 : _a.length) {\n    for (const {\n      policy,\n      position\n    } of clientOptions.additionalPolicies) {\n      // Sign happens after Retry and is commonly needed to occur\n      // before policies that intercept post-retry.\n      const afterPhase = position === \"perRetry\" ? \"Sign\" : undefined;\n      pipeline.addPolicy(policy, {\n        afterPhase\n      });\n    }\n  }\n  const {\n    allowInsecureConnection,\n    httpClient\n  } = clientOptions;\n  const endpointUrl = (_b = clientOptions.endpoint) !== null && _b !== void 0 ? _b : endpoint;\n  const client = (path, ...args) => {\n    const getUrl = requestOptions => buildRequestUrl(endpointUrl, path, args, Object.assign({\n      allowInsecureConnection\n    }, requestOptions));\n    return {\n      get: (requestOptions = {}) => {\n        return buildOperation(\"GET\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n      },\n      post: (requestOptions = {}) => {\n        return buildOperation(\"POST\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n      },\n      put: (requestOptions = {}) => {\n        return buildOperation(\"PUT\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n      },\n      patch: (requestOptions = {}) => {\n        return buildOperation(\"PATCH\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n      },\n      delete: (requestOptions = {}) => {\n        return buildOperation(\"DELETE\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n      },\n      head: (requestOptions = {}) => {\n        return buildOperation(\"HEAD\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n      },\n      options: (requestOptions = {}) => {\n        return buildOperation(\"OPTIONS\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n      },\n      trace: (requestOptions = {}) => {\n        return buildOperation(\"TRACE\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n      }\n    };\n  };\n  return {\n    path: client,\n    pathUnchecked: client,\n    pipeline\n  };\n}\nfunction buildOperation(method, url, pipeline, options, allowInsecureConnection, httpClient) {\n  var _a;\n  allowInsecureConnection = (_a = options.allowInsecureConnection) !== null && _a !== void 0 ? _a : allowInsecureConnection;\n  return {\n    then: function (onFulfilled, onrejected) {\n      return sendRequest(method, url, pipeline, Object.assign(Object.assign({}, options), {\n        allowInsecureConnection\n      }), httpClient).then(onFulfilled, onrejected);\n    },\n    async asBrowserStream() {\n      return sendRequest(method, url, pipeline, Object.assign(Object.assign({}, options), {\n        allowInsecureConnection,\n        responseAsStream: true\n      }), httpClient);\n    },\n    async asNodeStream() {\n      return sendRequest(method, url, pipeline, Object.assign(Object.assign({}, options), {\n        allowInsecureConnection,\n        responseAsStream: true\n      }), httpClient);\n    }\n  };\n}\nfunction isCredential(param) {\n  if (param.key !== undefined || isTokenCredential(param)) {\n    return true;\n  }\n  return false;\n}","map":{"version":3,"names":["isTokenCredential","createDefaultPipeline","sendRequest","buildRequestUrl","getClient","endpoint","credentialsOrPipelineOptions","clientOptions","credentials","isCredential","pipeline","_a","additionalPolicies","length","policy","position","afterPhase","undefined","addPolicy","allowInsecureConnection","httpClient","endpointUrl","_b","client","path","args","getUrl","requestOptions","Object","assign","get","buildOperation","post","put","patch","delete","head","options","trace","pathUnchecked","method","url","then","onFulfilled","onrejected","asBrowserStream","responseAsStream","asNodeStream","param","key"],"sources":["/workspaces/codespaces-blank/jupyter_react/node_modules/@azure-rest/core-client/src/getClient.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { KeyCredential, TokenCredential, isTokenCredential } from \"@azure/core-auth\";\nimport { HttpClient, HttpMethods, Pipeline, PipelineOptions } from \"@azure/core-rest-pipeline\";\nimport { createDefaultPipeline } from \"./clientHelpers\";\nimport {\n  Client,\n  ClientOptions,\n  HttpBrowserStreamResponse,\n  HttpNodeStreamResponse,\n  RequestParameters,\n  StreamableMethod,\n} from \"./common\";\nimport { sendRequest } from \"./sendRequest\";\nimport { buildRequestUrl } from \"./urlHelpers\";\n\n/**\n * Creates a client with a default pipeline\n * @param endpoint - Base endpoint for the client\n * @param options - Client options\n */\nexport function getClient(endpoint: string, options?: ClientOptions): Client;\n/**\n * Creates a client with a default pipeline\n * @param endpoint - Base endpoint for the client\n * @param credentials - Credentials to authenticate the requests\n * @param options - Client options\n */\nexport function getClient(\n  endpoint: string,\n  credentials?: TokenCredential | KeyCredential,\n  options?: ClientOptions,\n): Client;\nexport function getClient(\n  endpoint: string,\n  credentialsOrPipelineOptions?: (TokenCredential | KeyCredential) | ClientOptions,\n  clientOptions: ClientOptions = {},\n): Client {\n  let credentials: TokenCredential | KeyCredential | undefined;\n  if (credentialsOrPipelineOptions) {\n    if (isCredential(credentialsOrPipelineOptions)) {\n      credentials = credentialsOrPipelineOptions;\n    } else {\n      clientOptions = credentialsOrPipelineOptions ?? {};\n    }\n  }\n\n  const pipeline = createDefaultPipeline(endpoint, credentials, clientOptions);\n  if (clientOptions.additionalPolicies?.length) {\n    for (const { policy, position } of clientOptions.additionalPolicies) {\n      // Sign happens after Retry and is commonly needed to occur\n      // before policies that intercept post-retry.\n      const afterPhase = position === \"perRetry\" ? \"Sign\" : undefined;\n      pipeline.addPolicy(policy, {\n        afterPhase,\n      });\n    }\n  }\n\n  const { allowInsecureConnection, httpClient } = clientOptions;\n  const endpointUrl = clientOptions.endpoint ?? endpoint;\n  const client = (path: string, ...args: Array<any>) => {\n    const getUrl = (requestOptions: RequestParameters) =>\n      buildRequestUrl(endpointUrl, path, args, { allowInsecureConnection, ...requestOptions });\n\n    return {\n      get: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return buildOperation(\n          \"GET\",\n          getUrl(requestOptions),\n          pipeline,\n          requestOptions,\n          allowInsecureConnection,\n          httpClient,\n        );\n      },\n      post: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return buildOperation(\n          \"POST\",\n          getUrl(requestOptions),\n          pipeline,\n          requestOptions,\n          allowInsecureConnection,\n          httpClient,\n        );\n      },\n      put: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return buildOperation(\n          \"PUT\",\n          getUrl(requestOptions),\n          pipeline,\n          requestOptions,\n          allowInsecureConnection,\n          httpClient,\n        );\n      },\n      patch: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return buildOperation(\n          \"PATCH\",\n          getUrl(requestOptions),\n          pipeline,\n          requestOptions,\n          allowInsecureConnection,\n          httpClient,\n        );\n      },\n      delete: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return buildOperation(\n          \"DELETE\",\n          getUrl(requestOptions),\n          pipeline,\n          requestOptions,\n          allowInsecureConnection,\n          httpClient,\n        );\n      },\n      head: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return buildOperation(\n          \"HEAD\",\n          getUrl(requestOptions),\n          pipeline,\n          requestOptions,\n          allowInsecureConnection,\n          httpClient,\n        );\n      },\n      options: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return buildOperation(\n          \"OPTIONS\",\n          getUrl(requestOptions),\n          pipeline,\n          requestOptions,\n          allowInsecureConnection,\n          httpClient,\n        );\n      },\n      trace: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return buildOperation(\n          \"TRACE\",\n          getUrl(requestOptions),\n          pipeline,\n          requestOptions,\n          allowInsecureConnection,\n          httpClient,\n        );\n      },\n    };\n  };\n\n  return {\n    path: client,\n    pathUnchecked: client,\n    pipeline,\n  };\n}\n\nfunction buildOperation(\n  method: HttpMethods,\n  url: string,\n  pipeline: Pipeline,\n  options: RequestParameters,\n  allowInsecureConnection?: boolean,\n  httpClient?: HttpClient,\n): StreamableMethod {\n  allowInsecureConnection = options.allowInsecureConnection ?? allowInsecureConnection;\n  return {\n    then: function (onFulfilled, onrejected) {\n      return sendRequest(\n        method,\n        url,\n        pipeline,\n        { ...options, allowInsecureConnection },\n        httpClient,\n      ).then(onFulfilled, onrejected);\n    },\n    async asBrowserStream() {\n      return sendRequest(\n        method,\n        url,\n        pipeline,\n        { ...options, allowInsecureConnection, responseAsStream: true },\n        httpClient,\n      ) as Promise<HttpBrowserStreamResponse>;\n    },\n    async asNodeStream() {\n      return sendRequest(\n        method,\n        url,\n        pipeline,\n        { ...options, allowInsecureConnection, responseAsStream: true },\n        httpClient,\n      ) as Promise<HttpNodeStreamResponse>;\n    },\n  };\n}\n\nfunction isCredential(\n  param: (TokenCredential | KeyCredential) | PipelineOptions,\n): param is TokenCredential | KeyCredential {\n  if ((param as KeyCredential).key !== undefined || isTokenCredential(param)) {\n    return true;\n  }\n\n  return false;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}