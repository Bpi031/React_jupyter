{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { RestError, createHttpHeaders } from \"@azure/core-rest-pipeline\";\nexport function createRestError(messageOrResponse, response) {\n  var _a;\n  const resp = typeof messageOrResponse === \"string\" ? response : messageOrResponse;\n  const internalError = resp.body.error || resp.body;\n  const message = typeof messageOrResponse === \"string\" ? messageOrResponse : (_a = internalError.message) !== null && _a !== void 0 ? _a : `Unexpected status code: ${resp.status}`;\n  return new RestError(message, {\n    statusCode: statusCodeToNumber(resp.status),\n    code: internalError.code,\n    request: resp.request,\n    response: toPipelineResponse(resp)\n  });\n}\nfunction toPipelineResponse(response) {\n  var _a;\n  return {\n    headers: createHttpHeaders(response.headers),\n    request: response.request,\n    status: (_a = statusCodeToNumber(response.status)) !== null && _a !== void 0 ? _a : -1\n  };\n}\nfunction statusCodeToNumber(statusCode) {\n  const status = Number.parseInt(statusCode);\n  return Number.isNaN(status) ? undefined : status;\n}","map":{"version":3,"names":["RestError","createHttpHeaders","createRestError","messageOrResponse","response","resp","internalError","body","error","message","_a","status","statusCode","statusCodeToNumber","code","request","toPipelineResponse","headers","Number","parseInt","isNaN","undefined"],"sources":["/workspaces/codespaces-blank/jupyter_react/node_modules/@azure-rest/core-client/src/restError.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { PipelineResponse, RestError, createHttpHeaders } from \"@azure/core-rest-pipeline\";\nimport { PathUncheckedResponse } from \"./common\";\n\n/**\n * Creates a rest error from a PathUnchecked response\n */\nexport function createRestError(response: PathUncheckedResponse): RestError;\n/**\n * Creates a rest error from an error message and a PathUnchecked response\n */\nexport function createRestError(message: string, response: PathUncheckedResponse): RestError;\nexport function createRestError(\n  messageOrResponse: string | PathUncheckedResponse,\n  response?: PathUncheckedResponse,\n): RestError {\n  const resp = typeof messageOrResponse === \"string\" ? response! : messageOrResponse;\n  const internalError = resp.body.error || resp.body;\n  const message =\n    typeof messageOrResponse === \"string\"\n      ? messageOrResponse\n      : internalError.message ?? `Unexpected status code: ${resp.status}`;\n  return new RestError(message, {\n    statusCode: statusCodeToNumber(resp.status),\n    code: internalError.code,\n    request: resp.request,\n    response: toPipelineResponse(resp),\n  });\n}\n\nfunction toPipelineResponse(response: PathUncheckedResponse): PipelineResponse {\n  return {\n    headers: createHttpHeaders(response.headers),\n    request: response.request,\n    status: statusCodeToNumber(response.status) ?? -1,\n  };\n}\n\nfunction statusCodeToNumber(statusCode: string): number | undefined {\n  const status = Number.parseInt(statusCode);\n\n  return Number.isNaN(status) ? undefined : status;\n}\n"],"mappings":"AAAA;AACA;AAEA,SAA2BA,SAAS,EAAEC,iBAAiB,QAAQ,2BAA2B;AAW1F,OAAM,SAAUC,eAAeA,CAC7BC,iBAAiD,EACjDC,QAAgC;;EAEhC,MAAMC,IAAI,GAAG,OAAOF,iBAAiB,KAAK,QAAQ,GAAGC,QAAS,GAAGD,iBAAiB;EAClF,MAAMG,aAAa,GAAGD,IAAI,CAACE,IAAI,CAACC,KAAK,IAAIH,IAAI,CAACE,IAAI;EAClD,MAAME,OAAO,GACX,OAAON,iBAAiB,KAAK,QAAQ,GACjCA,iBAAiB,GACjB,CAAAO,EAAA,GAAAJ,aAAa,CAACG,OAAO,cAAAC,EAAA,cAAAA,EAAA,GAAI,2BAA2BL,IAAI,CAACM,MAAM,EAAE;EACvE,OAAO,IAAIX,SAAS,CAACS,OAAO,EAAE;IAC5BG,UAAU,EAAEC,kBAAkB,CAACR,IAAI,CAACM,MAAM,CAAC;IAC3CG,IAAI,EAAER,aAAa,CAACQ,IAAI;IACxBC,OAAO,EAAEV,IAAI,CAACU,OAAO;IACrBX,QAAQ,EAAEY,kBAAkB,CAACX,IAAI;GAClC,CAAC;AACJ;AAEA,SAASW,kBAAkBA,CAACZ,QAA+B;;EACzD,OAAO;IACLa,OAAO,EAAEhB,iBAAiB,CAACG,QAAQ,CAACa,OAAO,CAAC;IAC5CF,OAAO,EAAEX,QAAQ,CAACW,OAAO;IACzBJ,MAAM,EAAE,CAAAD,EAAA,GAAAG,kBAAkB,CAACT,QAAQ,CAACO,MAAM,CAAC,cAAAD,EAAA,cAAAA,EAAA,GAAI,CAAC;GACjD;AACH;AAEA,SAASG,kBAAkBA,CAACD,UAAkB;EAC5C,MAAMD,MAAM,GAAGO,MAAM,CAACC,QAAQ,CAACP,UAAU,CAAC;EAE1C,OAAOM,MAAM,CAACE,KAAK,CAACT,MAAM,CAAC,GAAGU,SAAS,GAAGV,MAAM;AAClD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}