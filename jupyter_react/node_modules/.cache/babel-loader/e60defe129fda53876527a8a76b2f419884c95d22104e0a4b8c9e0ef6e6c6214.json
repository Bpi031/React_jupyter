{"ast":null,"code":"var _jsxFileName = \"/workspaces/codespaces-blank/jupyter_react/src/components/CopilotCell.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AceEditor from 'react-ace';\nimport axios from 'axios';\nimport 'ace-builds/src-noconflict/mode-markdown';\nimport 'ace-builds/src-noconflict/theme-monokai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CopilotCell() {\n  _s();\n  const [markdown, setMarkdown] = useState('');\n  const [code, setCode] = useState('');\n  const handleGenerate = async () => {\n    try {\n      const response = await axios.post('http://localhost:8000/sentence', {\n        sentence: markdown\n      });\n      const generatedCode = response.data.code;\n      setCode(generatedCode);\n    } catch (error) {\n      console.error('Failed to generate code:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AceEditor, {\n      mode: \"markdown\",\n      theme: \"monokai\",\n      onChange: setMarkdown,\n      name: \"UNIQUE_ID_OF_DIV\",\n      editorProps: {\n        $blockScrolling: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerate,\n      children: \"Generate Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AceEditor, {\n      mode: \"python\",\n      theme: \"monokai\",\n      value: code,\n      name: \"UNIQUE_ID_OF_DIV\",\n      editorProps: {\n        $blockScrolling: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(CopilotCell, \"gnbm5FGXqtk7x50HZj3Ye1Zs6X0=\");\n_c = CopilotCell;\nexport default CopilotCell;\nvar _c;\n$RefreshReg$(_c, \"CopilotCell\");","map":{"version":3,"names":["React","useState","AceEditor","axios","jsxDEV","_jsxDEV","CopilotCell","_s","markdown","setMarkdown","code","setCode","handleGenerate","response","post","sentence","generatedCode","data","error","console","children","mode","theme","onChange","name","editorProps","$blockScrolling","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","_c","$RefreshReg$"],"sources":["/workspaces/codespaces-blank/jupyter_react/src/components/CopilotCell.js"],"sourcesContent":["import React, { useState } from 'react';\nimport AceEditor from 'react-ace';\nimport axios from 'axios';\n\nimport 'ace-builds/src-noconflict/mode-markdown';\nimport 'ace-builds/src-noconflict/theme-monokai';\n\nfunction CopilotCell() {\n  const [markdown, setMarkdown] = useState('');\n  const [code, setCode] = useState('');\n\n  const handleGenerate = async () => {\n    try {\n      const response = await axios.post('http://localhost:8000/sentence', {\n        sentence: markdown,\n      });\n\n      const generatedCode = response.data.code;\n      setCode(generatedCode);\n    } catch (error) {\n      console.error('Failed to generate code:', error);\n    }\n  };\n\n  return (\n    <div>\n      <AceEditor\n        mode=\"markdown\"\n        theme=\"monokai\"\n        onChange={setMarkdown}\n        name=\"UNIQUE_ID_OF_DIV\"\n        editorProps={{ $blockScrolling: true }}\n      />\n      <button onClick={handleGenerate}>\n        Generate Code\n      </button>\n      <AceEditor\n        mode=\"python\"\n        theme=\"monokai\"\n        value={code}\n        name=\"UNIQUE_ID_OF_DIV\"\n        editorProps={{ $blockScrolling: true }}\n      />\n    </div>\n  );\n}\n\nexport default CopilotCell;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,WAAW;AACjC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,yCAAyC;AAChD,OAAO,yCAAyC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,gCAAgC,EAAE;QAClEC,QAAQ,EAAEP;MACZ,CAAC,CAAC;MAEF,MAAMQ,aAAa,GAAGH,QAAQ,CAACI,IAAI,CAACP,IAAI;MACxCC,OAAO,CAACK,aAAa,CAAC;IACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,oBACEb,OAAA;IAAAe,QAAA,gBACEf,OAAA,CAACH,SAAS;MACRmB,IAAI,EAAC,UAAU;MACfC,KAAK,EAAC,SAAS;MACfC,QAAQ,EAAEd,WAAY;MACtBe,IAAI,EAAC,kBAAkB;MACvBC,WAAW,EAAE;QAAEC,eAAe,EAAE;MAAK;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACFzB,OAAA;MAAQ0B,OAAO,EAAEnB,cAAe;MAAAQ,QAAA,EAAC;IAEjC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTzB,OAAA,CAACH,SAAS;MACRmB,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAC,SAAS;MACfU,KAAK,EAAEtB,IAAK;MACZc,IAAI,EAAC,kBAAkB;MACvBC,WAAW,EAAE;QAAEC,eAAe,EAAE;MAAK;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACvB,EAAA,CAtCQD,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAwCpB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}