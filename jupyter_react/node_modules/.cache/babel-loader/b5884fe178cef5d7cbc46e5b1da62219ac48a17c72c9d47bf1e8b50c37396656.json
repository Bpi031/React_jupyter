{"ast":null,"code":"var _jsxFileName = \"/workspaces/codespaces-blank/jupyter_react/src/components/CopilotCell.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport CodeCell from './CodeCell';\nimport MarkdownCell from './MarkdownCell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CopilotCell() {\n  _s();\n  const [code, setCode] = useState('');\n  const [content, setContent] = useState('');\n  const handleMarkdownChange = newContent => {\n    setContent(newContent);\n  };\n  const handleButtonClick = async () => {\n    try {\n      const response = await axios.post('http://localhost:8000/sentence', {\n        sentence: content\n      });\n      const generatedCode = response.data.content;\n      setCode(generatedCode);\n    } catch (error) {\n      console.error('Failed to generate code:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MarkdownCell, {\n      onChange: handleMarkdownChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: \"Generate Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CodeCell, {\n      code: code\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(CopilotCell, \"PJsN8e+R+xBNws35xj+Sy+X8ISI=\");\n_c = CopilotCell;\nexport default CopilotCell;\nvar _c;\n$RefreshReg$(_c, \"CopilotCell\");","map":{"version":3,"names":["React","useState","axios","CodeCell","MarkdownCell","jsxDEV","_jsxDEV","CopilotCell","_s","code","setCode","content","setContent","handleMarkdownChange","newContent","handleButtonClick","response","post","sentence","generatedCode","data","error","console","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/workspaces/codespaces-blank/jupyter_react/src/components/CopilotCell.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport CodeCell from './CodeCell';\nimport MarkdownCell from './MarkdownCell';\n\nfunction CopilotCell() {\n  const [code, setCode] = useState('');\n  const [content, setContent] = useState('');\n\n  const handleMarkdownChange = (newContent) => {\n    setContent(newContent);\n  };\n\n  const handleButtonClick = async () => {\n    try {\n      const response = await axios.post('http://localhost:8000/sentence', {\n        sentence: content,\n      });\n\n      const generatedCode = response.data.content;\n      setCode(generatedCode);\n    } catch (error) {\n      console.error('Failed to generate code:', error);\n    }\n  };\n\n  return (\n    <div>\n      <MarkdownCell onChange={handleMarkdownChange} />\n      <button onClick={handleButtonClick}>Generate Code</button>\n      <pre>{content}</pre>\n      <CodeCell code={code} />\n    </div>\n  );\n}\n\nexport default CopilotCell;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,oBAAoB,GAAIC,UAAU,IAAK;IAC3CF,UAAU,CAACE,UAAU,CAAC;EACxB,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,gCAAgC,EAAE;QAClEC,QAAQ,EAAEP;MACZ,CAAC,CAAC;MAEF,MAAMQ,aAAa,GAAGH,QAAQ,CAACI,IAAI,CAACT,OAAO;MAC3CD,OAAO,CAACS,aAAa,CAAC;IACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,oBACEf,OAAA;IAAAiB,QAAA,gBACEjB,OAAA,CAACF,YAAY;MAACoB,QAAQ,EAAEX;IAAqB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChDtB,OAAA;MAAQuB,OAAO,EAAEd,iBAAkB;MAAAQ,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1DtB,OAAA;MAAAiB,QAAA,EAAMZ;IAAO;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACpBtB,OAAA,CAACH,QAAQ;MAACM,IAAI,EAAEA;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV;AAACpB,EAAA,CA7BQD,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AA+BpB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}