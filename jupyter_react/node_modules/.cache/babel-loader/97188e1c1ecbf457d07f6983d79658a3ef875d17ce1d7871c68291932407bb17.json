{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport getClient from \"../rest/index.js\";\nexport function createOpenAI(endpoint, credential, options = {}) {\n  const clientContext = getClient(endpoint, credential, options);\n  return clientContext;\n}","map":{"version":3,"names":["getClient","createOpenAI","endpoint","credential","options","clientContext"],"sources":["/workspaces/codespaces-blank/jupyter_react/node_modules/@azure/openai/src/api/OpenAIContext.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * THIS IS AN AUTO-GENERATED FILE - DO NOT EDIT!\n *\n * Any changes you make here may be lost.\n *\n * If you need to make changes, please do so in the original source file, \\{project-root\\}/sources/custom\n */\n\nimport { TokenCredential, KeyCredential } from \"@azure/core-auth\";\nimport { ClientOptions } from \"@azure-rest/core-client\";\nimport { OpenAIContext } from \"../rest/index.js\";\nimport getClient from \"../rest/index.js\";\n\nexport interface OpenAIClientOptions extends ClientOptions {}\n\nexport { OpenAIContext } from \"../rest/index.js\";\n\nexport function createOpenAI(\n  endpoint: string,\n  credential: KeyCredential | TokenCredential,\n  options: OpenAIClientOptions = {},\n): OpenAIContext {\n  const clientContext = getClient(endpoint, credential, options);\n  return clientContext;\n}\n"],"mappings":"AAAA;AACA;AAaA,OAAOA,SAAS,MAAM,kBAAkB;AAMxC,OAAM,SAAUC,YAAYA,CAC1BC,QAAgB,EAChBC,UAA2C,EAC3CC,OAAA,GAA+B,EAAE;EAEjC,MAAMC,aAAa,GAAGL,SAAS,CAACE,QAAQ,EAAEC,UAAU,EAAEC,OAAO,CAAC;EAC9D,OAAOC,aAAa;AACtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}