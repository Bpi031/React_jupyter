{"ast":null,"code":"var _jsxFileName = \"/workspaces/codespaces-blank/jupyter_react/src/components/MarkdownCell.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-noconflict/mode-markdown';\nimport 'ace-builds/src-noconflict/theme-monokai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MarkdownCell() {\n  _s();\n  const [markdown, setMarkdown] = useState('');\n  const [html, setHtml] = useState('');\n  const handleConvert = () => {\n    const convertedHtml = marked(markdown);\n    setHtml(convertedHtml);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AceEditor, {\n      mode: \"markdown\",\n      theme: \"monokai\",\n      onChange: setMarkdown,\n      name: \"UNIQUE_ID_OF_DIV\",\n      editorProps: {\n        $blockScrolling: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConvert,\n      children: \"Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: html\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(MarkdownCell, \"7ikEbXeL4Epx4F2cHVs3cqLalDQ=\");\n_c = MarkdownCell;\nexport default MarkdownCell;\nvar _c;\n$RefreshReg$(_c, \"MarkdownCell\");","map":{"version":3,"names":["React","useState","AceEditor","jsxDEV","_jsxDEV","MarkdownCell","_s","markdown","setMarkdown","html","setHtml","handleConvert","convertedHtml","marked","children","mode","theme","onChange","name","editorProps","$blockScrolling","fileName","_jsxFileName","lineNumber","columnNumber","onClick","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/workspaces/codespaces-blank/jupyter_react/src/components/MarkdownCell.js"],"sourcesContent":["import React, { useState } from 'react';\nimport AceEditor from 'react-ace';\n\nimport 'ace-builds/src-noconflict/mode-markdown';\nimport 'ace-builds/src-noconflict/theme-monokai';\n\nfunction MarkdownCell() {\n    const [markdown, setMarkdown] = useState('');\n    const [html, setHtml] = useState('');\n\n    const handleConvert = () => {\n        const convertedHtml = marked(markdown);\n        setHtml(convertedHtml);\n    };\n\n    return (\n        <div>\n            <AceEditor\n                mode=\"markdown\"\n                theme=\"monokai\"\n                onChange={setMarkdown}\n                name=\"UNIQUE_ID_OF_DIV\"\n                editorProps={{ $blockScrolling: true }}\n            />\n            <button onClick={handleConvert}>\n                Convert\n            </button>\n            <div dangerouslySetInnerHTML={{ __html: html }} />\n        </div>\n    );\n}\n\nexport default MarkdownCell;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,WAAW;AAEjC,OAAO,yCAAyC;AAChD,OAAO,yCAAyC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMU,aAAa,GAAGA,CAAA,KAAM;IACxB,MAAMC,aAAa,GAAGC,MAAM,CAACN,QAAQ,CAAC;IACtCG,OAAO,CAACE,aAAa,CAAC;EAC1B,CAAC;EAED,oBACIR,OAAA;IAAAU,QAAA,gBACIV,OAAA,CAACF,SAAS;MACNa,IAAI,EAAC,UAAU;MACfC,KAAK,EAAC,SAAS;MACfC,QAAQ,EAAET,WAAY;MACtBU,IAAI,EAAC,kBAAkB;MACvBC,WAAW,EAAE;QAAEC,eAAe,EAAE;MAAK;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACFpB,OAAA;MAAQqB,OAAO,EAAEd,aAAc;MAAAG,QAAA,EAAC;IAEhC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTpB,OAAA;MAAKsB,uBAAuB,EAAE;QAAEC,MAAM,EAAElB;MAAK;IAAE;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEd;AAAClB,EAAA,CAxBQD,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AA0BrB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}