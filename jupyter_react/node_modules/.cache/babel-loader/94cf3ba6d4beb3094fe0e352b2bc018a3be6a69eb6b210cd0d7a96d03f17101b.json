{"ast":null,"code":"var _jsxFileName = \"/workspaces/codespaces-blank/jupyter_react/src/components/CopilotCell.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AceEditor from 'react-ace';\nimport axios from 'axios';\nimport 'ace-builds/src-noconflict/mode-markdown';\nimport 'ace-builds/src-noconflict/theme-monokai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CopilotCell() {\n  _s();\n  const [markdown, setMarkdown] = useState('');\n  const [code, setCode] = useState('');\n  const handleGenerate = async () => {\n    try {\n      const response = await axios.post('https://api.openai.com/v1/engines/davinci-codex/completions', {\n        prompt: markdown,\n        max_tokens: 100\n      }, {\n        headers: {\n          'Authorization': 'Bearer YOUR_AZURE_OPENAI_KEY',\n          'Content-Type': 'application/json'\n        }\n      });\n      const generatedCode = response.data.choices[0].text;\n      setCode(generatedCode);\n    } catch (error) {\n      console.error('Failed to generate code:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AceEditor, {\n      mode: \"markdown\",\n      theme: \"monokai\",\n      onChange: setMarkdown,\n      name: \"UNIQUE_ID_OF_DIV\",\n      editorProps: {\n        $blockScrolling: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerate,\n      children: \"Generate Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AceEditor, {\n      mode: \"javascript\",\n      theme: \"monokai\",\n      value: code,\n      name: \"UNIQUE_ID_OF_DIV\",\n      editorProps: {\n        $blockScrolling: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(CopilotCell, \"gnbm5FGXqtk7x50HZj3Ye1Zs6X0=\");\n_c = CopilotCell;\nexport default CopilotCell;\nvar _c;\n$RefreshReg$(_c, \"CopilotCell\");","map":{"version":3,"names":["React","useState","AceEditor","axios","jsxDEV","_jsxDEV","CopilotCell","_s","markdown","setMarkdown","code","setCode","handleGenerate","response","post","prompt","max_tokens","headers","generatedCode","data","choices","text","error","console","children","mode","theme","onChange","name","editorProps","$blockScrolling","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","_c","$RefreshReg$"],"sources":["/workspaces/codespaces-blank/jupyter_react/src/components/CopilotCell.js"],"sourcesContent":["import React, { useState } from 'react';\nimport AceEditor from 'react-ace';\nimport axios from 'axios';\n\nimport 'ace-builds/src-noconflict/mode-markdown';\nimport 'ace-builds/src-noconflict/theme-monokai';\n\nfunction CopilotCell() {\n    const [markdown, setMarkdown] = useState('');\n    const [code, setCode] = useState('');\n\n    const handleGenerate = async () => {\n        try {\n            const response = await axios.post('https://api.openai.com/v1/engines/davinci-codex/completions', {\n                prompt: markdown,\n                max_tokens: 100,\n            }, {\n                headers: {\n                    'Authorization': 'Bearer YOUR_AZURE_OPENAI_KEY',\n                    'Content-Type': 'application/json',\n                },\n            });\n\n            const generatedCode = response.data.choices[0].text;\n            setCode(generatedCode);\n        } catch (error) {\n            console.error('Failed to generate code:', error);\n        }\n    };\n\n    return (\n        <div>\n            <AceEditor\n                mode=\"markdown\"\n                theme=\"monokai\"\n                onChange={setMarkdown}\n                name=\"UNIQUE_ID_OF_DIV\"\n                editorProps={{ $blockScrolling: true }}\n            />\n            <button onClick={handleGenerate}>\n                Generate Code\n            </button>\n            <AceEditor\n                mode=\"javascript\"\n                theme=\"monokai\"\n                value={code}\n                name=\"UNIQUE_ID_OF_DIV\"\n                editorProps={{ $blockScrolling: true }}\n            />\n        </div>\n    );\n}\n\nexport default CopilotCell;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,WAAW;AACjC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,yCAAyC;AAChD,OAAO,yCAAyC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,6DAA6D,EAAE;QAC7FC,MAAM,EAAEP,QAAQ;QAChBQ,UAAU,EAAE;MAChB,CAAC,EAAE;QACCC,OAAO,EAAE;UACL,eAAe,EAAE,8BAA8B;UAC/C,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MAEF,MAAMC,aAAa,GAAGL,QAAQ,CAACM,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;MACnDV,OAAO,CAACO,aAAa,CAAC;IAC1B,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;EAED,oBACIjB,OAAA;IAAAmB,QAAA,gBACInB,OAAA,CAACH,SAAS;MACNuB,IAAI,EAAC,UAAU;MACfC,KAAK,EAAC,SAAS;MACfC,QAAQ,EAAElB,WAAY;MACtBmB,IAAI,EAAC,kBAAkB;MACvBC,WAAW,EAAE;QAAEC,eAAe,EAAE;MAAK;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACF7B,OAAA;MAAQ8B,OAAO,EAAEvB,cAAe;MAAAY,QAAA,EAAC;IAEjC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT7B,OAAA,CAACH,SAAS;MACNuB,IAAI,EAAC,YAAY;MACjBC,KAAK,EAAC,SAAS;MACfU,KAAK,EAAE1B,IAAK;MACZkB,IAAI,EAAC,kBAAkB;MACvBC,WAAW,EAAE;QAAEC,eAAe,EAAE;MAAK;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAC3B,EAAA,CA5CQD,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AA8CpB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}